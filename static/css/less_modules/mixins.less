/*---------------------------------------------------
    LESS Elements 0.9
  ---------------------------------------------------
    A set of useful LESS mixins
    More info at: http://lesselements.com
  ---------------------------------------------------*/ 

.gradient(@color: #F5F5F5, @start: #EEE, @stop: #FFF) {
    background: @color;
    background: -webkit-gradient(linear,
        left bottom,
        left top,
        color-stop(0, @start),
        color-stop(1, @stop));
    background: -ms-linear-gradient(bottom,
        @start,
        @stop);
    background: -moz-linear-gradient(center bottom,
        @start 0%,
        @stop 100%);
    background: -o-linear-gradient(@stop,
        @start);
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@stop,@start));
}


.gradient-v-top-75(@color: #fff, @start: #fff, @stop: #ccc) {
    background: @color;
    background: -webkit-gradient(linear,
        left bottom,
        left top,
        color-stop(.75, @start),
        color-stop(1, @stop));
    background: -ms-linear-gradient(bottom,
        @start,
        @stop);
    background: -moz-linear-gradient(center bottom,
        @start 75%,
        @stop 100%);
    background: -o-linear-gradient(@stop,
        @start);
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@stop,@start));
}

.horizontal-gradient (@startColor: #eee, @endColor: white) {
    background-color: @startColor;
    background-image: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));
    background-image: -webkit-linear-gradient(left, @startColor, @endColor);
    background-image: -moz-linear-gradient(left, @startColor, @endColor);
    background-image: -ms-linear-gradient(left, @startColor, @endColor);
    background-image: -o-linear-gradient(left, @startColor, @endColor);
}

.bw-gradient(@color: #F5F5F5, @start: 0, @stop: 255) {
    background: @color;
    background: -webkit-gradient(linear,
        left bottom,
        left top,
        color-stop(0, rgb(@start,@start,@start)),
        color-stop(1, rgb(@stop,@stop,@stop)));
    background: -ms-linear-gradient(bottom,
        rgb(@start,@start,@start) 0%,
        rgb(@stop,@stop,@stop) 100%);
    background: -moz-linear-gradient(center bottom,
        rgb(@start,@start,@start) 0%,
        rgb(@stop,@stop,@stop) 100%);
    background: -o-linear-gradient(rgb(@stop,@stop,@stop),
        rgb(@start,@start,@start));
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",rgb(@stop,@stop,@stop),rgb(@start,@start,@start)));
}
.bordered(@top-color: #EEE, @right-color: #EEE, @bottom-color: #EEE, @left-color: #EEE) {
    border-top: solid 1px @top-color;
    border-left: solid 1px @left-color;
    border-right: solid 1px @right-color;
    border-bottom: solid 1px @bottom-color;
}
.drop-shadow(@x-axis: 0, @y-axis: 1px, @blur: 2px, @alpha: 0.1) {
    -webkit-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
    -moz-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
    box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
}
.rounded(@radius: 2px) {
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    border-radius: @radius;
}
.border-radius(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
    -webkit-border-top-right-radius: @topright;
    -webkit-border-bottom-right-radius: @bottomright;
    -webkit-border-bottom-left-radius: @bottomleft;
    -webkit-border-top-left-radius: @topleft;
    -moz-border-radius-topright: @topright;
    -moz-border-radius-bottomright: @bottomright;
    -moz-border-radius-bottomleft: @bottomleft;
    -moz-border-radius-topleft: @topleft;
    border-top-right-radius: @topright;
    border-bottom-right-radius: @bottomright;
    border-bottom-left-radius: @bottomleft;
    border-top-left-radius: @topleft;
    .background-clip(padding-box);
}
.opacity(@opacity: 0.5) {
    -moz-opacity: @opacity;
    -khtml-opacity: @opacity;
    -webkit-opacity: @opacity;
    opacity: @opacity;
    @opperc: @opacity * 100;
    -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
    filter: ~"alpha(opacity=@{opperc})";
}



.animation (@name, @duration: 300ms, @delay: 0, @ease: ease) {
    -webkit-animation: @name @duration @delay @ease;
    -moz-animation:    @name @duration @delay @ease;
    -ms-animation:     @name @duration @delay @ease;
    .animated;
}


.transition-duration(@duration: 0.2s) {
    -moz-transition-duration: @duration;
    -webkit-transition-duration: @duration;
    -o-transition-duration: @duration;
    transition-duration: @duration;
}
.transform(...) {
    -webkit-transform: @arguments;
    -moz-transform: @arguments;
    -o-transform: @arguments;
    -ms-transform: @arguments;
    transform: @arguments;
}
.transform-style(...) {
    -webkit-transform-style: @arguments;
    -moz-transform-style: @arguments;
    -o-transform-style: @arguments;
    -ms-transform-style: @arguments;
    transform-style: @arguments;
}
.rotation(@deg:5deg){
    .transform(rotate(@deg));
}
.scale(@ratio:1.5){
    .transform(scale(@ratio));
}
.transition(@attribute: all,@duration:0.2s, @ease:ease-out) {
    -webkit-transition: @attribute @duration @ease;
    -moz-transition: @attribute @duration @ease;
    -o-transition: @attribute @duration @ease;
    transition: @attribute @duration @ease;
}
.transition-properties(...) {
    @props: ~`"@{arguments}".replace(/[\[\]]/g, '')`;
    -webkit-transition: @props;
    -moz-transition: @props;
    -o-transition: @props;
    transition: @props;
}
.inner-shadow(@horizontal:0, @vertical:1px, @blur:2px, @alpha: 0.4) {
    -webkit-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
    -moz-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
    box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}
.box-shadow(@arguments) {
    -webkit-box-shadow: @arguments;
    -moz-box-shadow: @arguments;
    box-shadow: @arguments;
}
.box-sizing(@sizing: border-box) {
    -ms-box-sizing: @sizing;
    -moz-box-sizing: @sizing;
    -webkit-box-sizing: @sizing;
    box-sizing: @sizing;
}
.user-select(@argument: none) {
    -webkit-user-select: @argument;
    -moz-user-select: @argument;
    -ms-user-select: @argument;
    user-select: @argument;
}
.columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #EEE, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
    -moz-column-width: @colwidth;
    -moz-column-count: @colcount;
    -moz-column-gap: @colgap;
    -moz-column-rule-color: @columnRuleColor;
    -moz-column-rule-style: @columnRuleStyle;
    -moz-column-rule-width: @columnRuleWidth;
    -webkit-column-width: @colwidth;
    -webkit-column-count: @colcount;
    -webkit-column-gap: @colgap;
    -webkit-column-rule-color: @columnRuleColor;
    -webkit-column-rule-style: @columnRuleStyle;
    -webkit-column-rule-width: @columnRuleWidth;
    column-width: @colwidth;
    column-count: @colcount;
    column-gap: @colgap;
    column-rule-color: @columnRuleColor;
    column-rule-style: @columnRuleStyle;
    column-rule-width: @columnRuleWidth;
}
.translate(@x:0, @y:0) {
    .transform(translate(@x, @y));
}
.background-clip(@argument: padding-box) {
    -moz-background-clip: @argument;
    -webkit-background-clip: @argument;
    background-clip: @argument;
}

/**/
.arrow-down(@bgcolor:#f00, @top:100%, @left:20px, @size:10px) {
    &:before {
        content: '';
        display: block;
        position: absolute;
        top: @top;
        left: @left;
        width: 0;
        height: 0;
        border-color: @bgcolor transparent transparent transparent;
        border-style: solid;
        border-width: (@size + 1px);
    }
}

.arrow-up(@bgcolor:#f00, @top:100%, @left:20px, @size:10px) {
    &:before {
        content: '';
        display: block;
        position: absolute;
        top: @top;
        left: @left;
        width: 0;
        height: 0;
        border-color: transparent transparent @bgcolor transparent;
        border-style: solid;
        border-width: (@size + 1px);
    }
}

.no-spin() {

    input[type=number]::-webkit-inner-spin-button, 
    input[type=number]::-webkit-outer-spin-button { 
        -webkit-appearance: none; 

    }

}

/**/

.clearfix() {
    &:before, &:after {
        content: " ";
        display: table;
    }

    &:after {
        clear: both;
    }
}



.absolute-center-x-y {

    position: absolute;
    top: 50%;
    left: 50%;
    .transform(translateX(-50%)translateY(-50%));

}


.absolute-center-x {

    position: absolute; 
    top: auto;
    left: 50%;
    .transform(translateX(-50%));

}
 
.absolute-center-y {

    position: absolute;
    top: 50%;
    left: auto;
    .transform(translateY(-50%));

}

.relative-center-x {

    position: relative; 
    left: 50%;
    .transform(translateX(-50%));

}


.relative {
    position: relative;
}


.list--unstyled {

    margin: 0;
    padding: 0;
    list-style: none;

}





// Toggle font smoothing mode in Webkit & FF
.font-smoothing() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.font-smoothing(reset) { 
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: auto;
}  




